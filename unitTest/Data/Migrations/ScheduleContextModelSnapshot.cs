// <auto-generated />
using System;
using AgendarConsultas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendarConsultas.Data.Migrations
{
    [DbContext(typeof(ScheduleContext))]
    partial class ScheduleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("AgendarConsultas.Model.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Cell")
                        .HasColumnType("TEXT")
                        .HasColumnName("cell");

                    b.Property<int>("ClinicId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("clinic_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.ToTable("client");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Clinic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Cell")
                        .HasColumnType("TEXT")
                        .HasColumnName("cell");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Schedule")
                        .HasColumnType("TEXT")
                        .HasColumnName("schedule");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.HasKey("Id");

                    b.ToTable("clinic");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Consultation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("ClinicId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("clinic_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("schedule");

                    b.Property<int>("PetId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("pet_id");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.Property<int>("VeterinaryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("veterinary_id");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("PetId");

                    b.HasIndex("VeterinaryId");

                    b.ToTable("consultation");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("clinic_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Race")
                        .HasColumnType("TEXT")
                        .HasColumnName("race");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("pet");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Secretary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Cell")
                        .HasColumnType("TEXT")
                        .HasColumnName("cell");

                    b.Property<int>("ClinicId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("clinic_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.ToTable("secretary");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Veterinary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Cell")
                        .HasColumnType("TEXT")
                        .HasColumnName("cell");

                    b.Property<int>("ClinicId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("clinic_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Schedule")
                        .HasColumnType("TEXT")
                        .HasColumnName("schedule");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.ToTable("veterinary");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Client", b =>
                {
                    b.HasOne("AgendarConsultas.Model.Clinic", "Clinic")
                        .WithMany("Clients")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Consultation", b =>
                {
                    b.HasOne("AgendarConsultas.Model.Clinic", "Clinic")
                        .WithMany("Consultations")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendarConsultas.Model.Pet", "Pet")
                        .WithMany("Consultations")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendarConsultas.Model.Veterinary", "Veterinary")
                        .WithMany("Consultation")
                        .HasForeignKey("VeterinaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");

                    b.Navigation("Pet");

                    b.Navigation("Veterinary");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Pet", b =>
                {
                    b.HasOne("AgendarConsultas.Model.Client", "Client")
                        .WithMany("Pets")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Secretary", b =>
                {
                    b.HasOne("AgendarConsultas.Model.Clinic", "Clinic")
                        .WithMany("Secretary")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Veterinary", b =>
                {
                    b.HasOne("AgendarConsultas.Model.Clinic", "Clinic")
                        .WithMany()
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Client", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Clinic", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Consultations");

                    b.Navigation("Secretary");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Pet", b =>
                {
                    b.Navigation("Consultations");
                });

            modelBuilder.Entity("AgendarConsultas.Model.Veterinary", b =>
                {
                    b.Navigation("Consultation");
                });
#pragma warning restore 612, 618
        }
    }
}
